var db=null;var liteSequence;var lite={checkliteDB:function(){console.info("deviceready");db=openDatabase('questTestDatabaseV3','','Sample DB',800*800);if(db.version==''){console.info('First time running... create tables');db.changeVersion('','1.0',function(trans){trans.executeSql('CREATE TABLE IF NOT EXISTS locations(quest_id INTEGER, sequence INTEGER, hint TEXT, GPS TEXT, user_id INTEGER)',[],function(tx,rs){console.info("locations Table locations created");},function(tx,err){console.info(err.message);});trans.executeSql('CREATE TABLE IF NOT EXISTS seqStatus(quest_id INTEGER, status INTEGER)',[],function(tx,rs){console.info("status Table locations created");},function(tx,err){console.info(err.message);});},function(err){console.info(err.message);},function(){console.info("change Version success");});}else{console.info('Version: ',db.version)}},saveLocations:function(){console.log("get here");var hint=$.trim($("textarea").val());console.log(hint);var user_id=localStorage.getItem("user_id");var quest_id=$('#locationContainer').attr('data-GEOQuest-id');var lat=$('#mapcontainer').attr('data-lat');var lon=$('#mapcontainer').attr('data-lon');var GPS=lat+"|"+lon;console.log(lat+" : "+lon);if(lat){if(hint!=""&&lat!=""){sequence++;console.log(sequence);db.transaction(function(trans){trans.executeSql('INSERT INTO locations(quest_id, sequence, hint, GPS, user_id) VALUES(?,?,?,?,?)',[quest_id,sequence,hint,GPS,user_id],function(tx,rs){if($('#locationContainer .information')){$('#locationContainer .information').remove();}console.info("locations have been inserted");$('#mapcontainer').attr('data-lat','');$('#mapcontainer').attr('data-lon','');$("textarea").val('');$('#mapcontainer').remove();var pages=sequence+1
$('<div class="information">your No.'+pages+' location</div>').insertAfter($('#locationContainer #locationHintArea'))},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);}else{$('<div class="notification">I think you forgot to leave your hint or geolocation</div>').insertBefore($('#locationContainer #locationHintArea'))setTimeout(function(){$('#locationContainer .notification').remove()},4000)}}else{$('<div class="notification">I think you forgot to leave your geolocation</div>').insertBefore($('#locationContainer #locationHintArea'))setTimeout(function(){$('#locationContainer .notification').remove()},4000)}},submitToDatabase:function(){var quest_id=$('#locationContainer').attr('data-GEOQuest-id');console.log('saveLocationstoDatabase');db.transaction(function(trans){trans.executeSql('SELECT * FROM locations where quest_id=?',[quest_id],function(tx,rs){var result=rs.rows;console.log(result);app.saveLocationstoDatabase(rs);},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},checkOldStatus:function(){var quest_id=$(this).attr('data-questId');db.transaction(function(trans){trans.executeSql('SELECT * FROM seqStatus where quest_id=?',[quest_id],function(tx,rs){console.log(rs);var result=rs.rows.length;console.log(result);if(result>0){$('.joinLocationsContainer').attr('data-currentQuest',quest_id);liteSequence=Number(rs.rows.item(0).status);console.log(liteSequence);lite.showLocation();}else{lite.checkLocations(quest_id);}},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},checkLocations:function(quest_id){liteSequence=0;$('.joinLocationsContainer').attr('data-currentQuest',quest_id);var user_id=localStorage.getItem('user_id');db.transaction(function(trans){trans.executeSql('SELECT * FROM locations where quest_id=? AND user_id!=?',[quest_id,user_id],function(tx,rs){var result=rs.rows.length;console.log(result);if(result==0){becca.getServerLocations(quest_id);}else{lite.showLocation();}},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},downloadLocations:function(values){db.transaction(function(trans){for(var i=0;i<values.length;i++){var user_id=values[i].user_id;var sqlSequence=values[i].sequence;var hint=values[i].hint;var GPS=values[i].GPS;var quest_id=values[i].quest_id;trans.executeSql('INSERT INTO locations(quest_id, sequence, hint, GPS, user_id) VALUES(?,?,?,?,?)',[quest_id,sqlSequence,hint,GPS,user_id],function(tx,rs){console.info("download finished");},function(tx,err){console.info(err.message);});}},lite.transErr,lite.showLocation);},showLocation:function(){console.log('');liteSequence++console.log(liteSequence);if($('.hintInfo')){$('.hintInfo').remove();}var quest_id=$('.joinLocationsContainer').attr('data-currentQuest');console.log(quest_id);var user_id=localStorage.getItem('user_id');db.transaction(function(trans){trans.executeSql('SELECT * FROM locations where quest_id=? AND user_id!=? AND sequence=?',[quest_id,user_id,liteSequence],function(tx,rs){var result=rs.rows.length;console.log(result);if(result>0){$('.joinLocationsContainer').append('<p data-lat="" data-lon="" class="hintInfo"></p>')var GPS=rs.rows.item(0).GPS;var GPSArray=GPS.split('|');var lat=GPSArray[0];var lon=GPSArray[1];$('.hintInfo').text(rs.rows.item(0).hint);$('.hintInfo').attr('data-lat',lat);$('.hintInfo').attr('data-lon',lon);becca.showLocationTrack();}else{becca.showFinishedinfo();}},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},checkmyquestLocations:function(){var quest_id=$(this).attr('data-questId');var user_id=localStorage.getItem('user_id');db.transaction(function(trans){trans.executeSql('SELECT * FROM locations where quest_id=? AND user_id=?',[quest_id,user_id],function(tx,rs){var result=rs.rows.length;console.log(result);if(result>0){$('#myQuestPage').removeClass('show');$('#myQuestPage').addClass('hide');$('#locationContainer').attr('data-sequence',result);app.createQuestMapPage(quest_id);}},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},checkStatus:function(){var quest_id=$('.joinLocationsContainer').attr('data-currentQuest');db.transaction(function(trans){trans.executeSql('SELECT * FROM seqStatus where quest_id=?',[quest_id],function(tx,rs){console.log(rs);var result=rs.rows.length;console.log(result);if(result>0){lite.updataStatus();}else{lite.insertStatus();}},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},insertStatus:function(){var quest_id=$('.joinLocationsContainer').attr('data-currentQuest');db.transaction(function(trans){trans.executeSql('INSERT INTO seqStatus(quest_id, status) VALUES(?,?)',[quest_id,liteSequence],function(tx,rs){console.info("sava status success");},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},updataStatus:function(){var quest_id=$('.joinLocationsContainer').attr('data-currentQuest');db.transaction(function(trans){trans.executeSql("UPDATE seqStatus SET status= ? WHERE quest_id = ?",[liteSequence,quest_id],function(tx,rs){console.info("UPDATE status success");},function(tx,err){console.info(err.message);});},lite.transErr,lite.transSuccess);},transErr:function(tx,err){console.info("Error processing transaction: "+err);},transSuccess:function(){console.info("db transaction success");}}